from PIL import Image
import numpy as np

# Encrypt image function
def encrypt_image(input_path, output_path, key):
    # Open the image
    image = Image.open(input_path)
    pixels = np.array(image)

    # Encrypt the image by applying a basic mathematical operation (XOR with the key)
    encrypted_pixels = pixels ^ key

    # Save the encrypted image
    encrypted_image = Image.fromarray(encrypted_pixels.astype('uint8'))
    encrypted_image.save(output_path)

# Decrypt image function
def decrypt_image(input_path, output_path, key):
    # Open the encrypted image
    image = Image.open(input_path)
    pixels = np.array(image)

    # Decrypt the image by reversing the encryption operation (XOR with the key)
    decrypted_pixels = pixels ^ key

    # Save the decrypted image
    decrypted_image = Image.fromarray(decrypted_pixels.astype('uint8'))
    decrypted_image.save(output_path)

# Example usage
input_image_path = 'input_image.png'  
encrypted_image_path = 'encrypted_image.png'
decrypted_image_path = 'decrypted_image.png'
encryption_key = 123  

# Encrypt the image
encrypt_image(input_image_path, encrypted_image_path, encryption_key)
print(f"Image encrypted and saved to {encrypted_image_path}")

# Decrypt the image
decrypt_image(encrypted_image_path, decrypted_image_path, encryption_key)
print(f"Image decrypted and saved to {decrypted_image_path}")
